#ifndef BIGTREETECHMINI12864_H
#define BIGTREETECHMINI12864_H
#include <Arduino.h>
	#define cross_width 24
	#define cross_height 24
		#define cross_block_width 14
	#define cross_block_height 14
class Mini12864 {
public:
	void Mini12864Setup(void);

	void u8g2_prepare(void);

	void u8g2_box_frame(uint8_t a);

	void u8g2_disc_circle(uint8_t a);

	void u8g2_r_frame(uint8_t a);

	void u8g2_string(uint8_t a);

	void u8g2_line(uint8_t a);

	void u8g2_triangle(uint8_t a);

	void u8g2_ascii_1() ;

	void u8g2_ascii_2();

	void u8g2_extra_page(uint8_t a);


	// constexpr inline static const unsigned char cross_bits[72] U8X8_PROGMEM  = {
	  // 0x00, 0x18, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x00, 0x42, 0x00,
	  // 0x00, 0x42, 0x00, 0x00, 0x42, 0x00, 0x00, 0x81, 0x00, 0x00, 0x81, 0x00,
	  // 0xC0, 0x00, 0x03, 0x38, 0x3C, 0x1C, 0x06, 0x42, 0x60, 0x01, 0x42, 0x80,
	  // 0x01, 0x42, 0x80, 0x06, 0x42, 0x60, 0x38, 0x3C, 0x1C, 0xC0, 0x00, 0x03,
	  // 0x00, 0x81, 0x00, 0x00, 0x81, 0x00, 0x00, 0x42, 0x00, 0x00, 0x42, 0x00,
	  // 0x00, 0x42, 0x00, 0x00, 0x24, 0x00, 0x00, 0x24, 0x00, 0x00, 0x18, 0x00,
	// };


	// constexpr inline static const unsigned char cross_fill_bits[72] U8X8_PROGMEM  = {
	  // 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x64, 0x00, 0x26,
	  // 0x84, 0x00, 0x21, 0x08, 0x81, 0x10, 0x08, 0x42, 0x10, 0x10, 0x3C, 0x08,
	  // 0x20, 0x00, 0x04, 0x40, 0x00, 0x02, 0x80, 0x00, 0x01, 0x80, 0x18, 0x01,
	  // 0x80, 0x18, 0x01, 0x80, 0x00, 0x01, 0x40, 0x00, 0x02, 0x20, 0x00, 0x04,
	  // 0x10, 0x3C, 0x08, 0x08, 0x42, 0x10, 0x08, 0x81, 0x10, 0x84, 0x00, 0x21,
	  // 0x64, 0x00, 0x26, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	// };


	// static const unsigned char cross_block_bits[] U8X8_PROGMEM  = {
	  // 0xFF, 0x3F, 0x01, 0x20, 0x01, 0x20, 0x01, 0x20, 0x01, 0x20, 0x01, 0x20,
	  // 0xC1, 0x20, 0xC1, 0x20, 0x01, 0x20, 0x01, 0x20, 0x01, 0x20, 0x01, 0x20,
	  // 0x01, 0x20, 0xFF, 0x3F,
	// };

	void u8g2_bitmap_overlay(uint8_t a);

	void u8g2_bitmap_modes(uint8_t transparent);
	uint8_t draw_state = 0;

	void draw(void);

	void setupu8g2(void);

	void setupBacklights(void);

	//Display splash screen at setup
	void setupDisplay(void);

	//Display splash screen at setup
	void splashScreen(void);

	//Display link status
	void reportLAN_DisplayUnknown(void);

	void reportLAN_DisplayOn(void);


	void reportLAN_DisplayOff(void);



	//Check for encoder button pressed and return true
	bool updateENC_BUT();

	void enableDisplay();

	void disableDisplay();
    void Update_Display();

};
#endif